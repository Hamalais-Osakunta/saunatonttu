services:
  
  #Data insert service
  data-insert:
    build: ./data-insert-service
    depends_on:
      - redis
    networks:
      - monitoring
    restart: always
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  # Data ingestion service
  data-ingestion:
    build: ./data-ingest-service
    depends_on:
      - redis
    networks:
      - monitoring
    restart: always
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_HOST=timescaledb
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

  # Redis Queue
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - monitoring
    restart: always

  # TimescaleDB (PostgreSQL-based time-series DB)
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    networks:
      - monitoring
    restart: always

  # Grafana service
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - timescaledb
    networks:
      - monitoring
    restart: always

networks:
  monitoring:
    driver: bridge

volumes:
  timescaledb_data:
  grafana_data:
